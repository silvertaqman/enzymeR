git_credentials()
credentials::set_github_pat()
q()
credentials::set_github_pat()
hgjhg
install.packages("rco")
check()
library(usethis)
library(devtools)
check()
simulate_kinetics(seq(0.1,10,.1), list(S0=1,Km=.015,Vmax=2.533))
time()
t <- seq(.1,10,.05)
t
p<-list(S0=1,Km=.015,Vmax=2.533)
p
equations <- list(
# "irreversible MM rate equation"
irrev = function(time, params) {
df <- with(params, {
data.frame(
time=time,
substrate = Km*pracma::lambertWp(S0*exp((S0-Vmax*time)/Km)/Km), #Schnell-Mendoza eq
rate = Vmax*Substrate/(Km+Substrate) # MM equation
)})
return(df)})
equations
equations$irrev()
equations$irrev(t,p)
equations <- list(
# "irreversible MM rate equation"
irrev = function(time, params) {
df <- with(params, {
data.frame(
time=time,
substrate = Km*pracma::lambertWp(S0*exp((S0-Vmax*time)/Km)/Km), #Schnell-Mendoza eq
rate = Vmax*substrate/(Km+substrate) # MM equation
)})
return(df)})
equations$irrev(t,p)
equations <- list(
# "irreversible MM rate equation"
irrev = function(time, params) {
df <- with(params, {
data.frame(
time=time,
substrate = Km*pracma::lambertWp(S0*exp((S0-Vmax*time)/Km)/Km) #Schnell-Mendoza eq
) |>
cbind(
rate = Vmax*substrate/(Km+substrate) # MM equation
)
})
return(df)})
equations$irrev(t,p)
data.frame(
time=t,
substrate = p$Km*pracma::lambertWp(p$S0*exp((p$S0-p$Vmax*t)/p$Km)/p$Km) #Schnell-Mendoza eq
)
data.frame(
time=t,
substrate = p$Km*pracma::lambertWp(p$S0*exp((p$S0-p$Vmax*t)/p$Km)/p$Km) #Schnell-Mendoza eq
) |> plot()
data.frame(
time=t,
substrate = p$Km*pracma::lambertWp(p$S0*exp((p$S0-p$Vmax*t)/p$Km)/p$Km) #Schnell-Mendoza eq
) |>
cbind(
rate = Vmax*substrate/(Km+substrate)
)
data.frame(
time=t,
substrate = p$Km*pracma::lambertWp(p$S0*exp((p$S0-p$Vmax*t)/p$Km)/p$Km) #Schnell-Mendoza eq
) |>
cbind(
rate = p$Vmax*substrate/(p$Km+substrate))
a=data.frame(
time=t,
substrate = p$Km*pracma::lambertWp(p$S0*exp((p$S0-p$Vmax*t)/p$Km)/p$Km) #Schnell-Mendoza eq
)
cbind(a,rate = p$Vmax*substrate/(p$Km+substrate))
cbind(a,rate = p$Vmax*a$substrate/(p$Km+a$substrate))
cbind(a,rate = p$Vmax*a$substrate/(p$Km+a$substrate)) |> plot()
equations <- list(
# "irreversible rate equation"
irrev = function(time, params) {
df <- with(params, {
data.frame(
time=time,
substrate = Km*pracma::lambertWp(S0*exp((S0-Vmax*time)/Km)/Km) #Schnell-Mendoza eq
)
df <- df |>
cbind(
rate = Vmax*substrate/(Km+substrate) # MM equation
)
})
return(df)})
equations
equations$irrev()
equations$irrev(t,p)
equations <- list(
# "irreversible rate equation"
irrev = function(time, params) {
df <- with(params, {
data.frame(
time=time,
substrate = Km*pracma::lambertWp(S0*exp((S0-Vmax*time)/Km)/Km) #Schnell-Mendoza eq
)
df <- df |>
cbind(
rate = with(df, Vmax*substrate/(Km+substrate)) # MM equation
)
})
return(df)})
equations$irrev(t,p)
t
p
p<-list(S0=1,Km=.015,Vmax=253.3)
p<-list(S0=1,Km=.5,Vmax=.25)
source("R/simulate_kinetics.R")
simulate_kinetics(t,p)
simulate_kinetics(t,p)
source("R/kinetic_plots.R")
kinetic_plot(simulate_kinetics(t,p))
simulate_kinetics(t,p)
a=simulate_kinetics(t,p)
kinetic_plot(a)
source("R/simulate_kinetics.R")
a=simulate_kinetics(t,p)
kinetic_plot(a)
source("R/kinetic_plots.R")
kinetic_plot(a)
check()
install.packages("rcmdcheck")
library(rcmdcheck)
rcmdcheck('/cloud/project/')
install.packages("rcmdcheck")
uninstall.packages("rcmdcheck")
re,pve.packages("rcmdcheck")
remove.packages("rcmdcheck")
install.packages("rcmdcheck")
check()
q()
